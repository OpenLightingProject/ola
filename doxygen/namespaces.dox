/**
 * @namespace ola
 * @brief The namespace containing all OLA symbols.
 *
 * @namespace ola::acn
 * @brief ACN related code.
 *
 * @namespace ola::client
 * @brief OLA C++ API
 *
 * @namespace ola::dmx
 * @brief DMX512 related code.
 *
 * @namespace ola::e133
 * @brief E1.33 (RDMNet)
 *
 * @namespace ola::io
 * @brief Classes for general I/O and event handling.
 *
 * @namespace ola::http
 * @brief The embedded HTTP server.
 *
 * @namespace ola::math
 * @brief Math helper functions.
 *
 * @namespace ola::messaging
 * @brief A framework for serializing simple message structures.
 *
 * @namespace ola::network
 * @brief Code for network communication.
 *
 * @namespace ola::plugin
 * @brief Code for supported devices and protocols.
 *
 * @namespace ola::plugin::artnet
 * @brief The ArtNet plugin.
 *
 * @namespace ola::plugin::dmx4linux
 * @brief Code for DMX4Linux devices.
 *
 * @namespace ola::plugin::dummy
 * @brief The Dummy plugin.
 *
 * @namespace ola::plugin::e131
 * @brief The E1.31 (sACN) plugin.
 *
 * @namespace ola::plugin::espnet
 * @brief Code for the ESPNet protocol.
 *
 * @namespace ola::plugin::ftdidmx
 * @brief Code for FTDI devices.
 *
 * @namespace ola::plugin::gpio
 * @brief The General Purpose digital I/O Plugin.
 *
 * @namespace ola::plugin::karate
 * @brief Code for Karate devices.
 *
 * @namespace ola::plugin::kinet
 * @brief Code for the Kinet protocol.
 *
 * @namespace ola::plugin::milinst
 * @brief Code for Milford Instruments devices.
 *
 * @namespace ola::plugin::opendmx
 * @brief Code for the Enttec OpenDMX.
 *
 * @namespace ola::plugin::openpixelcontrol
 * @brief The Open Pixel Control (OPC) plugin.
 *
 * @namespace ola::plugin::osc
 * @brief Code for the OSC protocol.
 *
 * @namespace ola::plugin::pathport
 * @brief Code for the Pathport protocol.
 *
 * @namespace ola::plugin::renard
 * @brief Code for Renard devices.
 *
 * @namespace ola::plugin::sandnet
 * @brief Code for the SandNet protocol.
 *
 * @namespace ola::plugin::shownet
 * @brief Code for the Strand ShowNet protocol.
 *
 * @namespace ola::plugin::spi
 * @brief Code for SPI devices.
 *
 * @namespace ola::plugin::stageprofi
 * @brief Code for Stageprofi devices.
 *
 * @namespace ola::plugin::uartdmx
 * @brief Code for UART DMX devices.
 *
 * @namespace ola::plugin::usbdmx
 * @brief The plugin for hardware using libusb.
 *
 * @namespace ola::plugin::usbdmx::jarule
 * @brief Ja Rule code.
 *
 * @namespace ola::plugin::usbpro
 * @brief Code for Enttec USB Pro devices and others using the same protocol.
 *
 * @namespace ola::rdm
 * @brief PLASA E1.20 Remote %Device Management
 *
 * @namespace ola::rpc
 * @brief The RPC (Remote Procedure Call) system
 *
 * @namespace ola::stl
 * @brief STL Helper functions.
 *
 * @namespace ola::testing
 * @brief Code used for unit testing.
 *
 * @namespace ola::thread
 * @brief Threads and syncronization mechanisms.
 *
 * @namespace ola::timecode
 * @brief Timecode
 *
 * @namespace ola::web
 * @brief Classes to deal with web services.
 *
 * @namespace ola::usb
 * @brief USB Device drivers.
 */
